#
# This file is part of rockapi.
# 
# rockapi is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
# 
# rockapi is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>;.

error.notEmpty                                 = ''{0}'' must be not empty
error.notNull                                  = ''{0}'' must be not null

domain.converter.exception.size                = The size of ''{0}'' field must be define

domain.business.invalid.id                     = Invalid ID ''{0}''
domain.business.invalid.class                  = Invalid class ''{0}''
domain.business.invalid.object                 = Invalid object ''{0}''
domain.business.validation.ok                  = Validation Successful

domain.validation.error.operation              = Invalid operation
domain.validation.error.null                   = Object must be not null

domain.validation.field.error.constraint       = Field ''{0}'' contains an invalid constraint. Must be one of {1}
domain.validation.field.error.date             = Field ''{0}'' has an invalid date
domain.validation.field.error.dateFuture       = Field ''{0}'' has an invalid date
domain.validation.field.error.dateInterval     = Field ''{0}'' is out of range. Must be between {1} and {2} [{3}]
domain.validation.field.error.datePast         = Field ''{0}'' has an invalid date
domain.validation.field.error.expression       = Field ''{0}'' has an invalid expression
domain.validation.field.error.expressionResult = Field ''{0}'' has an invalid expression result. Expected {1}, found {2}
domain.validation.field.error.invalid          = Field ''{0}'' is invalid
domain.validation.field.error.invalidType      = Field ''{0}'' has an invalid type
domain.validation.field.error.length           = Field ''{0}'' has an invalid length. Must be between {1} and {2}
domain.validation.field.error.notNull          = Field ''{0}'' must be not null
domain.validation.field.error.notEmpty         = Field ''{0}'' must not be empty
domain.validation.field.error.null             = Field ''{0}'' must be null
domain.validation.field.error.range            = Field ''{0}'' is out of range. Must be between {1} and {2}
domain.validation.field.error.regex            = Field ''{0}'' contains an invalid value

domain.util.error.differentTypes               = Destination class must be a assignable from source class. From '{0}' to '{1}'