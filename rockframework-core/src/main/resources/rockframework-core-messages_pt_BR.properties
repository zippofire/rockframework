#
# This file is part of rockapi.
# 
# rockapi is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
# 
# rockapi is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>;.

error.notEmpty                                          = ''{0}'' must be not empty
error.notNull                                           = ''{0}'' must be not null

domain.converter.exception.size                         = O tamanho do campo ''{0}'' deve ser definido

domain.business.invalid.id                              = Identificador inválido ''{0}''
domain.business.invalid.class                           = Classe inválida ''{0}''
domain.business.invalid.object                          = Objeto inválido ''{0}''
domain.business.validation.ok                           = Sucesso na validação

domain.business.validation.error.operation              = Operação inválida
domain.business.validation.error.null                   = Objeto não pode ser nulo

domain.business.validation.field.error.constraint       = O campo ''{0}'' contém um valor fora do padrão. Deve ser um destes {1}
domain.business.validation.field.error.date             = O campo ''{0}'' está com a data inválida
domain.business.validation.field.error.dateFuture       = O campo ''{0}'' está com a data inválida
domain.business.validation.field.error.dateInterval     = O campo ''{0}'' está fora do intervalo. Deve estar entre {1} e {2} [{3}]
domain.business.validation.field.error.datePast         = O campo ''{0}'' está com a data inválida
domain.business.validation.field.error.expression       = O campo ''{0}'' está com uma expressão inválida
domain.business.validation.field.error.expressionResult = O campo ''{0}'' está com o resultado da expressão inválido. Esperado {1}, encontrado {2}
domain.business.validation.field.error.invalid          = O campo ''{0}'' está invalido
domain.business.validation.field.error.invalidType      = O campo ''{0}'' está com o tipo inválido
domain.business.validation.field.error.length           = O campo ''{0}'' está com o tamanho inválido. Deve estar entre {1} e {2}
domain.business.validation.field.error.notNull          = O campo ''{0}'' não pode ser nulo
domain.business.validation.field.error.notEmpty         = O campo ''{0}'' não pode estar vazio
domain.business.validation.field.error.null             = O campo ''{0}'' deve ser nulo
domain.business.validation.field.error.range            = O campo ''{0}'' está fora do intervalo. Deve estar entre {1} e {2}
domain.business.validation.field.error.regex            = O campo ''{0}'' contém um valor inválido

domain.util.error.differentTypes                        = A classe de destino deve ser do mesmo tipo da classe de origem. Origem '{0}' destino '{1}'
